{
    "contents" : "\nmake.data<-function(){\n  K=5; T=200\n  X<-matrix(rnorm(K*T), T)\n  X[1:(K+2),]<-abs(X[1:(K+2),])\n  Z<-matrix(rlnorm(4*K*T), T)\n  Z[(K+2):nrow(Z), 1:(K+2)]<-0\n  theta<-rlnorm(K)\n  Y<-X%*%theta+rlnorm(T, meanlog = -4, sdlog = 2)\n  easy.save(X, 'Xmat.R')\n  easy.save(Y, 'Ymat.R')\n  easy.save(Z, 'Zmat.R')\n}\n\n\nget.largest.theta<-function(X, Y, Z){\n  #modify matricies to incorporate theta>=0 constraints\n  library('Matrix')\n  Z=bdiag(Z, diag(ncol(X))) %>% as.matrix()\n  X=rbind(X, -diag(ncol(X)))\n  Y=c(Y, rep(0, ncol(X)))\n  \n  #define function in line (10) of Holmes (2011)\n  Q.fun<-function(theta){\n    t(Z)%*%(Y-X%*%theta) %>%\n      pmin(0) %>%\n      as.data.frame() %>%\n      mutate(V1 = V1^2) %>%\n      sum()\n  }\n  \n  #find point that satesfies conditions\n  starting.value=optim(par=rep(1, ncol(X)), fn = Q.fun)$par\n  \n  #find largest value for each parameter\n  laply(seq(ncol(X)), function(l){\n    -constrOptim(theta=starting.value, f=function(theta) -theta[l], grad=NULL, ui=-t(Z)%*%X, ci=-t(Z)%*%Y)$value\n  })  \n}\n",
    "created" : 1405653378021.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2089294494",
    "id" : "ED04EADB",
    "lastKnownWriteTime" : 1405662040,
    "path" : "~/Dropbox/teaching/empiricalInventory/holmes2011/code/modules/findTheta.R",
    "project_path" : "modules/findTheta.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}